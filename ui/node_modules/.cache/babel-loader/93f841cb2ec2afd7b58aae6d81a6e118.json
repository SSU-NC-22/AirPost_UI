{"ast":null,"code":"var _jsxFileName = \"/home/seungmin/ncgo/ui/src/ManagementComponents/NodeManagement.tsx\";\nimport React, { Component, createContext } from 'react';\nimport RegisterNode from './Register/RegisterNode';\nimport NodeTable from './Table/NodeTable';\nimport { HEALTHCHECK_URL, SINK_URL } from '../defineUrl';\nimport { w3cwebsocket as W3CWebSocket } from 'websocket';\nimport NodeMap from './NodeMap';\nconst client = new W3CWebSocket(HEALTHCHECK_URL);\n\n/*\nNodeManagement\n- Manage node table, register node\n*/\nexport const ColorContext = createContext(\"yellow\");\n\nclass NodeManagement extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      sinkList: [],\n      nodeState: [],\n      healthMap: new Map(),\n      batteryMap: new Map(),\n      locationMap: new Map(),\n      showAllValid: true,\n      color: \"blue\"\n    };\n\n    this.handleAllClick = () => {\n      this.setState({\n        showAllValid: true\n      });\n    };\n\n    this.handleMapClick = () => {\n      this.setState({\n        showAllValid: false\n      });\n    };\n  }\n\n  componentWillMount() {\n    client.onopen = () => {\n      console.log('WebSocket Client for Health Check Connected');\n    };\n\n    client.onmessage = message => {\n      console.log(message);\n      this.setState({\n        nodeState: JSON.parse(message.data)\n      });\n      this.getHealthStateMap();\n      this.getBatteryStateMap();\n      this.getLocationStateMap();\n    };\n  }\n\n  componentDidMount() {\n    this.getsinkList();\n  } // Get sink list from backend\n\n\n  getsinkList() {\n    var url = SINK_URL;\n    fetch(url).then(res => res.json()).then(data => this.setState({\n      sinkList: data\n    })).catch(error => console.error('Error:', error));\n  }\n\n  getHealthStateMap() {\n    let map = this.state.healthMap;\n    this.state.nodeState.map(val => {\n      if (map.has(val.nid) === false) map.set(val.nid, val.state);\n      if (map.get(val.nid) !== val.state) map.set(val.nid, val.state);\n    });\n    this.setState({\n      healthMap: map\n    });\n  }\n\n  getBatteryStateMap() {\n    let map = this.state.batteryMap;\n    this.state.nodeState.map(val => {\n      if (map.has(val.nid) === false) map.set(val.nid, val.battery);\n      if (map.get(val.nid) !== val.state) map.set(val.nid, val.battery);\n    });\n    this.setState({\n      batteryMap: map\n    });\n  }\n\n  getLocationStateMap() {\n    let map = this.state.locationMap;\n    this.state.nodeState.map(val => {\n      if (map.has(val.nid) === false) map.set(val.nid, val.location);\n    });\n    this.setState({\n      locationMap: map\n    });\n  } // node state fetch해오는 코드 없음 ????\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        float: 'right'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn my-2 my-sm-0\",\n      \"data-toggle\": \"modal\",\n      \"data-target\": \"#register-node-modal\",\n      style: {\n        background: '#82CAFA',\n        color: 'white'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 6\n      }\n    }, \"register node\"), /*#__PURE__*/React.createElement(RegisterNode, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 6\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 6\n      }\n    }, \"Node\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        float: 'right'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: 'gray'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 7\n      }\n    }, \"\\u25CF : don't know \"), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: '#32CD32'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 7\n      }\n    }, \"\\u25CF : stable \"), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: '#FACC2E'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 7\n      }\n    }, \"\\u25CF : unstable \"), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 7\n      }\n    }, \"\\u25CF : disconnect \")), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 6\n      }\n    }, \"Viewer type \"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn my-2 my-sm-0\",\n      style: {\n        background: '#82CAFA',\n        color: 'white'\n      },\n      onClick: this.handleAllClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 6\n      }\n    }, \"All\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 6\n      }\n    }, \" \"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn my-2 my-sm-0\",\n      style: {\n        background: '#82CAFA',\n        color: 'white'\n      },\n      onClick: this.handleMapClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 6\n      }\n    }, \"Map\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 6\n      }\n    }), this.state.showAllValid ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 7\n      }\n    }, this.state.sinkList.map((sink, idx) => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        fontSize: '18pt',\n        fontWeight: 500\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }\n    }, sink.name === ' Gwangnaru Hangang River' || sink.name === ' Ttukseom Hangang River' || sink.name === ' Jamwon Hangang River' || sink.name === ' Gangseo Hangang River' ? sink.name.split(' ')[1] : sink.name.split(' ')[0]), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn dropdown-toggle\",\n      type: \"button\",\n      \"data-toggle\": \"collapse\",\n      \"data-target\": '#sink' + sink.id.toString(),\n      \"aria-controls\": sink.id.toString(),\n      style: {\n        color: 'black'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: 'sink' + sink.id.toString(),\n      className: \"collapse\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(NodeTable, {\n      sink_id: sink.id // 해당 싱크의 노드들을 가져오기 위해 sink_id 받음\n      ,\n      healthState: this.state.healthMap,\n      batteryState: this.state.batteryMap,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 10\n      }\n    }))))) : /*#__PURE__*/React.createElement(NodeMap, {\n      healthState: this.state.healthMap,\n      batteryState: this.state.batteryMap,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 7\n      }\n    })));\n  }\n\n}\n\n;\nexport default NodeManagement;","map":{"version":3,"sources":["/home/seungmin/ncgo/ui/src/ManagementComponents/NodeManagement.tsx"],"names":["React","Component","createContext","RegisterNode","NodeTable","HEALTHCHECK_URL","SINK_URL","w3cwebsocket","W3CWebSocket","NodeMap","client","ColorContext","NodeManagement","state","sinkList","nodeState","healthMap","Map","batteryMap","locationMap","showAllValid","color","handleAllClick","setState","handleMapClick","componentWillMount","onopen","console","log","onmessage","message","JSON","parse","data","getHealthStateMap","getBatteryStateMap","getLocationStateMap","componentDidMount","getsinkList","url","fetch","then","res","json","catch","error","map","val","has","nid","set","get","battery","location","render","float","background","sink","idx","fontSize","fontWeight","name","split","id","toString"],"mappings":"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","sourcesContent":["import React, { Component, useState, createContext} from 'react';\nimport RegisterNode from './Register/RegisterNode';\nimport NodeTable from './Table/NodeTable';\nimport {\n\tsinkListElem,\n\tnodeHealthCheckElem,\n\tlocationElem,\n} from '../ElemInterface/ElementsInterface';\nimport { HEALTHCHECK_URL, SINK_URL } from '../defineUrl';\nimport { w3cwebsocket as W3CWebSocket } from 'websocket';\nimport NodeMap from './NodeMap';\nimport { clear } from 'console';\nimport TrackingDelivery from '../TrackingDelivery';\n\n\nconst client = new W3CWebSocket(HEALTHCHECK_URL);\n\ninterface NodeManagementState {\n\tsinkList: Array<sinkListElem>;\n\tnodeState: Array<nodeHealthCheckElem>;\n\thealthMap: Map<number, number>;\n\tbatteryMap: Map<number, number>;\n\tlocationMap: Map<number, locationElem>;\n\n\tshowAllValid: boolean;\n\tcolor:string;\n}\n\n/*\nNodeManagement\n- Manage node table, register node\n*/\n\nexport const ColorContext = createContext(\"yellow\");\n\nclass NodeManagement extends Component<{}, NodeManagementState> {\n\tstate: NodeManagementState = {\n\t\tsinkList: [],\n\t\tnodeState: [],\n\t\thealthMap: new Map(),\n\t\tbatteryMap: new Map(),\n\t\tlocationMap: new Map(),\n\n\t\tshowAllValid: true,\n\t\tcolor:\"blue\",\n\t};\n\n\tcomponentWillMount() {\n\t\tclient.onopen = () => {\n\t \t\tconsole.log('WebSocket Client for Health Check Connected');\n\t \t};\n\t \tclient.onmessage = (message: any) => {\n\t\t\tconsole.log(message);\n\t \t\tthis.setState({\n\t\t\t\t nodeState: JSON.parse(message.data),\n\t\t\t});\n\t\t\tthis.getHealthStateMap();\n\t\t\tthis.getBatteryStateMap();\n\t\t\tthis.getLocationStateMap();\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.getsinkList();\n\t}\n\n\t// Get sink list from backend\n\tgetsinkList() {\n\t\tvar url = SINK_URL;\n\n\t\tfetch(url)\n\t\t\t.then((res) => res.json())\n\t\t\t.then((data) => this.setState({ sinkList: data }))\n\t\t\t.catch((error) => console.error('Error:', error));\n\t}\n\n\tgetHealthStateMap() {\n\t\tlet map = this.state.healthMap;\n\t\tthis.state.nodeState.map((val: nodeHealthCheckElem) => {\n\t\t\tif(map.has(val.nid) === false) map.set(val.nid, val.state);\n\t\t\tif(map.get(val.nid) !== val.state) map.set(val.nid, val.state);\n\t\t})\n\n\t\tthis.setState({\n\t\t\thealthMap: map,\n\t\t})\n\t}\n\n\tgetBatteryStateMap() {\n\t\tlet map = this.state.batteryMap;\n\t\tthis.state.nodeState.map((val: nodeHealthCheckElem) => {\n\t\t\tif(map.has(val.nid) === false) map.set(val.nid, val.battery);\n\t\t\tif(map.get(val.nid) !== val.state) map.set(val.nid, val.battery);\n\t\t})\n\n\t\tthis.setState({\n\t\t\tbatteryMap: map,\n\t\t})\n\t}\n\n\tgetLocationStateMap() {\n\t\tlet map = this.state.locationMap;\n\t\tthis.state.nodeState.map((val: nodeHealthCheckElem) => {\n\t\t\tif(map.has(val.nid) === false) map.set(val.nid, val.location);\n\t\t})\n\n\t\tthis.setState({\n\t\t\tlocationMap: map,\n\t\t})\n\t}\n\n\t// node state fetch해오는 코드 없음 ????\n\n\thandleAllClick = () => {\n\t\tthis.setState({\n\t\t\tshowAllValid: true,\n\t\t});\n\t}\n\thandleMapClick = () => {\n\t\tthis.setState({\n\t\t\tshowAllValid: false,\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div style={{ float: 'right' }}>\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tclassName=\"btn my-2 my-sm-0\"\n\t\t\t\t\t\tdata-toggle=\"modal\"\n\t\t\t\t\t\tdata-target=\"#register-node-modal\"\n\t\t\t\t\t\tstyle={{ background: '#82CAFA', color : 'white' }}\n\t\t\t\t\t>\n\t\t\t\t\t\tregister node\n\t\t\t\t\t</button>\n\t\t\t\t\t<RegisterNode></RegisterNode>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<h3>Node</h3>\n\t\t\t\t\t<hr />\n\t\t\t\t\t<div style={{ float: 'right' }}>\n\t\t\t\t\t\t<span style={{ color: 'gray' }}>● : don't know </span>\n\t\t\t\t\t\t<span style={{ color: '#32CD32' }}>● : stable </span>\n\t\t\t\t\t\t<span style={{ color: '#FACC2E' }}>● : unstable </span>\n\t\t\t\t\t\t<span style={{ color: 'red' }}>● : disconnect </span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<span >Viewer type </span>\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tclassName=\"btn my-2 my-sm-0\"\n\t\t\t\t\t\tstyle={{ background: '#82CAFA', color : 'white' }}\n\t\t\t\t\t\tonClick={this.handleAllClick}\n\t\t\t\t\t>\n\t\t\t\t\t\tAll\n\t\t\t\t\t</button>\n\t\t\t\t\t<span> </span>\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tclassName=\"btn my-2 my-sm-0\"\n\t\t\t\t\t\tstyle={{ background: '#82CAFA', color : 'white' }}\n\t\t\t\t\t\tonClick={this.handleMapClick}\n\t\t\t\t\t>\n\t\t\t\t\t\tMap\n\t\t\t\t\t</button>\n\t\t\t\t\t<hr/>\n\t\t\t\t\t{(this.state.showAllValid)?(\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t{this.state.sinkList.map((sink: sinkListElem, idx: number) => (\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<span style={{ fontSize: '18pt', fontWeight: 500 }}>\n\t\t\t\t\t\t\t\t\t{/*아래 조건문은 smartPark에 맞게 하드코딩 되어있는 코드임 지워도 됨*/}\n\t\t\t\t\t\t\t\t\t{(sink.name === ' Gwangnaru Hangang River' || sink.name === ' Ttukseom Hangang River' || sink.name === ' Jamwon Hangang River' || sink.name === ' Gangseo Hangang River') ? (\n\t\t\t\t\t\t\t\t\t\tsink.name.split(' ')[1]\n\t\t\t\t\t\t\t\t\t) : sink.name.split(' ')[0]\n\t\t\t\t\t\t\t\t\t}\t\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName=\"btn dropdown-toggle\"\n\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\tdata-toggle=\"collapse\"\n\t\t\t\t\t\t\t\t\tdata-target={'#sink' + sink.id.toString()}\n\t\t\t\t\t\t\t\t\taria-controls={sink.id.toString()}\n\t\t\t\t\t\t\t\t\tstyle={{ color: 'black' }}\n\t\t\t\t\t\t\t\t></button>\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tid={'sink' + sink.id.toString()}\n\t\t\t\t\t\t\t\t\tclassName=\"collapse\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<NodeTable\n\t\t\t\t\t\t\t\t\t\tsink_id={sink.id}                       // 해당 싱크의 노드들을 가져오기 위해 sink_id 받음\n\t\t\t\t\t\t\t\t\t\thealthState={this.state.healthMap}\n\t\t\t\t\t\t\t\t\t\tbatteryState={this.state.batteryMap}\n\t\t\t\t\t\t\t\t\t></NodeTable>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t\t):(\n\t\t\t\t\t\t<NodeMap \n\t\t\t\t\t\thealthState={this.state.healthMap}\n\t\t\t\t\t\tbatteryState={this.state.batteryMap}\n\t\t\t\t\t></NodeMap>\n\t\t\t\t\t)}\t\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t};\n};\n\nexport default NodeManagement;\n"]},"metadata":{},"sourceType":"module"}